== 0.9.2 2008-01-22
- Active Record distributed_find now handles REALLY large sets by breaking them into seperate jobs. 1MM models per master broken into ranges of 1000.

- Skynet::Job has better support for running tasks locally.  A job may run tasks in its own process if
  you are running in solo mode, you've made a "single" job, or you set the keep_map_tasks or keep_reduce_tasks below.
  When a job runs tasks locally it now honors the retry settings and timeouts.
  
- Skynet::Job and Skynet::AsyncJob are now almost identical.  In fact you can just use Skynet::Job and tell it to run async.
  
- Skynet::Job supports keep_map_tasks and keep_reduce_tasks settings.  
  If true, the master will run the tasks locally.
  If a number is provided, the master will run the tasks locally if there are LESS THAN OR EQUAL TO the number provided
  There are also Skynet::CONFIG settings for defaults. KEEP_REDUCE_TASKS, KEEP_MAP_TASKS
  I can see there being a problem with the timeouts being a little off... Since your kinda in a master and kinda in a map or reduce timeout.  The task timeouts will be correct at least.  Though, you won't get the benefit of redoes yet.

- Skynet now supports setting RETRY times per job by MASTER, MAP and REDUCE. So you can have a MASTER_RETRY=0, but have MAP_RETRY=2 and REDUCE_RETRY=3.  There are now defaults for those as well :DEFAULT_MASTER_RETRY, :DEFAULT_MAP_RETRY, :DEFAULT_REDUCE_RETRY.    If a message passes its RETRY it will be marked with an iteration of -1.   delete_expired_messages removes those messages as well.  These show up in the stats as :failed_tasks.  Skynet::Task and Skynet::Message now have retry fields denoting the maximum number of retries.

- There is now a :MAX_RETRIES config setting that controls how many iterations Skynet will even look for tasks as well.

- Skynet::MessageQueueAdaptor::Mysql now tries to reconnect if it gets disconnected.   This was to solve the "Mysql Server has Gone Away" errors.

- Skynet::Job Changed map_tasks and reduce_tasks to mappers and reducers respectively.  This was to remove the ambiguity between the actual map/reduce tasks and the number of mappers/reducers desired.

- ENFORCED TIMEOUTS - Even though a master might give up on a worker if it didn't respond in time, there was nothing to step any given worker from running forever.  We now enforce the timeouts (master_timeout, map_timeout, reduce_timeout) given in Skynet::Job using the Timeout module.  This causes a Timeout::Error to be thrown.   If you are using the mysql adapter, this can cause strange results sometimes.   If the Timeout error is thrown during a DB query, ActiveRecord will throw an ActiveRecord::StatementInvalid exception which includes the Timeout::Error exception in it.  Not sure how to prevent that from happening.

- Refactored Skynet::Job to be much cleaner and easier to test. 

- Skynet::Job won't call the reduce_partitioner if there are no valid results from the map_step.

- Lots more tests.  Skynet::Job now has test. Skynet::Message has more tests.  Skynet::MessageQueueAdapter::Mysql has tests that run if you have a skynet_test database setup.

- Workers now have a Skynet::CONFIG[:WORKER_MAX_PROCESSED] setting to control when to respawn based on how many that worker has processed.

- Made sure all config options for TupleSpace? adapter begin with TS and all Mysql adapter CONFIG settings start with MYSQL.        

- Mysql adapter now updates the updated_on time of rows in skynet_message_queues

BUGFIXES
Thanks to Jason Rimmer for finding these bugs.
- The skynet gem appears to be missing the Rubigen dependency
- Running skynet_install even without the rails arg still generates code with rails dependencies and tailings: RAILS_ROOT, RAILS_ENV, and the various directory tailings such as 'db/migrate', etc.
- Generated skynet script is missing "require 'rubygems'"
- Specification of pid directory and file is incorrect as 'skynet_manager.rb' wants only a directory with it specifying the file
- The sleep while waiting to start the queue server isn't long enough. There is now a CONFIG setting TS_SERVER_START_DELAY.


== 0.0.1 2007-12-16

* 1 major enhancement:
  * Initial release
